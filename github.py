# -*- coding: utf-8 -*-
"""Github.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Pc_ciazjHKftvw3M4qxOZIxn7lwIF0qP
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression

# Generate noisy sine curve data with more data points
x = np.linspace(0, np.pi, 100)  # Increase the number of data points
y = np.sin(x) + np.random.normal(0, 0.3, len(x))  # Add some noise

# Reshape data for sklearn
X = x.reshape(-1, 1)

# Transforming data to include polynomial features
poly_features = PolynomialFeatures(degree=4)  # Use degree 4 polynomial features
X_poly = poly_features.fit_transform(X)

# Perform polynomial regression
model = LinearRegression()
model.fit(X_poly, y)

# Predictions
y_pred = model.predict(X_poly)

# Plot original data and regression line
plt.scatter(x, y, label='Original Data')
plt.plot(x, y_pred, color='red', label='Regression Line')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Polynomial Regression (Degree 4) of Noisy Sine Curve with More Data Points')
plt.legend()
plt.show()